### load image from static files
## js , css, images files
### add external files to the project ---?'

when create a new directory for the static files
YOU MUST RESTART THE SERVER

################# connect the application with database
### install suitable dbms drivers

#### configure database credits, tell project --> connected to postgres


############## when django project ---> create django app --->
admin  --> Admin dashboard for your project

#### running command ---->  python manage.py migrate
####  connect project with datbase ---> admin panel

### django project ---> provide migration files ? ---->
contain the metadata about the table in the databse

---> migrations ---> used to apply changes to the database
---> versionning control for the database changes....

####################
python manage.py createsuperuser  # create superuser ---> can be used to log in admin dashboard
###############################


### install dbms extension
### add postgres conf. to settings.py
## python manage.py migrate ---> connect the project to the database
## 10 tables created , default installed apps in the application
## appliction ----> admin --->
## create new admin account  ---> python manage.py createsuperuser

##################################################################
####### Perform crud operations on the table --> database

Model ---> Class ---> represent table

##### tell database about the table I need to create ---> which I had added its information in
the model class


python manage.py makemigrations ---> scan any changes added to the models files in your apps
---> create migrations files

###########################################################

Crud using models

1-import the model
    from posts.model import Post

2- use model to get the data
select * from posts_post;
    Post.objects.all()   # query set

select * from posts_post where id > 2;
    Post.objects.filter(id__gt=2)  # query set

get one object
select * from posts_post where title='post2';
### make sure ---> get ---> return one object ?
Post.objects.get(title='post2')  # object from the model  # get return only one object ?
### get by id ---> primary key unique
#### used with unique field ?

select * from posts_post where title='post2' limit 1;


#############3
select * from posts where title like 'p%' or id > 2;
from django.db.models import Q
Post.objects.filter(Q(title__startswith='p')| Q(id__gt=2))

################################
create object ?

p = Post()
p.title = 'post added'
p.version = 1
p.privacy = '1'
p.save()

########## edit object , or delete object ?
1- get object

p.title = 'post added'
p.version = 1
p.privacy = '1'
p.save()

or
p.delete()



















